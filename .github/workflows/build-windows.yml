name: Build Windows Executables
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        architecture: 'x64'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller requests pywin32 pyinstaller-hooks-contrib

    - name: Build executables
      shell: pwsh
      working-directory: Client/Windows
      run: |
        Write-Host "Cleaning previous builds..."
        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue build, dist
        Write-Host "Building power_monitor.exe..."
        pyinstaller --clean power_monitor.spec
        if (-not (Test-Path "dist/power_monitor.exe")) {
            Write-Error "Failed to build power_monitor.exe"
            exit 1
        }
        Write-Host "Building AttendanceTracker.exe..."
        pyinstaller --clean AttendanceTracker.spec
        if (-not (Test-Path "dist/AttendanceTracker.exe")) {
            Write-Error "Failed to build AttendanceTracker.exe"
            exit 1
        }
        Write-Host "Contents of dist directory:"
        Get-ChildItem "dist" | Format-Table Name, Length

    - name: Create distribution package
      shell: pwsh
      run: |
        Write-Host "Copying files to root for flat zip..."
        Copy-Item "Client/Windows/dist/power_monitor.exe" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/dist/AttendanceTracker.exe" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/config.json" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/test_install.bat" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/uninstall.bat" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/start.bat" "./" -Force -ErrorAction Stop
        Write-Host "Package contents:"
        Get-ChildItem | Where-Object { $_.Name -in "power_monitor.exe", "AttendanceTracker.exe", "config.json", "test_install.bat", "uninstall.bat", "start.bat" } | Format-Table Name, Length

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AttendanceTracker-Windows-x64
        path: |
          power_monitor.exe
          AttendanceTracker.exe
          config.json
          test_install.bat
          uninstall.bat
          start.bat
name: Build Windows Executables
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        architecture: 'x64'
    - name: Install dependencies
      shell: pwsh
      working-directory: Client/Windows  # Move here to match requirements.txt location
      run: |
        Write-Host "Installing dependencies..."
        python -m pip install --upgrade pip
        if (-not (Test-Path requirements.txt)) {
            Write-Error "requirements.txt not found in Client/Windows!"
            exit 1
        }
        pip install -r requirements.txt
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to install dependencies from requirements.txt"
            exit 1
        }
        pip list | Out-File pip_list.txt
        # Verify pywin32 attributes
        python -c "import win32gui; print('MSG:', hasattr(win32gui, 'MSG'))" | Out-File pywin32_check.txt -Append
        python -c "import win32ts, win32con; print('WM_WTSSESSION_CHANGE:', hasattr(win32con, 'WM_WTSSESSION_CHANGE'))" | Out-File win32ts_check.txt -Append
        # Check pywin32 DLLs
        dir $env:LOCALAPPDATA\Programs\Python\Python312\Lib\site-packages\pywin32_system32 | Out-File dll_check.txt
    - name: Build executables
      shell: pwsh
      working-directory: Client/Windows
      run: |
        Write-Host "Cleaning previous builds..."
        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue build, dist
        Write-Host "Building PowerMonitor.exe..."
        python -m PyInstaller --clean --log-level DEBUG power_monitor.spec 2>&1 | Tee-Object -FilePath "pyinstaller_log.txt"
        if (-not (Test-Path "dist/PowerMonitor.exe")) {
            Write-Error "Failed to build PowerMonitor.exe"
            Get-Content "pyinstaller_log.txt"
            exit 1
        }
        Write-Host "Building AttendanceTracker.exe..."
        python -m PyInstaller --clean --log-level DEBUG AttendanceTracker.spec 2>&1 | Tee-Object -FilePath "pyinstaller_attendance_log.txt"
        if (-not (Test-Path "dist/AttendanceTracker.exe")) {
            Write-Error "Failed to build AttendanceTracker.exe"
            Get-Content "pyinstaller_attendance_log.txt"
            exit 1
        }
        Write-Host "Contents of dist directory:"
        Get-ChildItem "dist" | Format-Table Name, Length
    - name: Create distribution package
      shell: pwsh
      run: |
        Write-Host "Copying files to root for flat zip..."
        Copy-Item "Client/Windows/dist/PowerMonitor.exe" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/dist/AttendanceTracker.exe" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/config
name: Build Windows Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-windows:
    runs-on: windows-latest  # This ensures we get a 64-bit Windows environment

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        architecture: 'x64'  # Explicitly request 64-bit Python

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install --use-pep517 requests pywin32 pyinstaller-hooks-contrib

    - name: Build executables
      shell: pwsh  # Explicitly use PowerShell
      run: |
        Set-Location Client\Windows
        Write-Host "Building power_monitor.exe..."
        pyinstaller --clean power_monitor.spec
        if (-not (Test-Path "dist\power_monitor.exe")) {
            Write-Error "Failed to build power_monitor.exe"
            exit 1
        }
        
        Write-Host "Building AttendanceTracker.exe..."
        pyinstaller --clean AttendanceTracker.spec
        if (-not (Test-Path "dist\AttendanceTracker.exe")) {
            Write-Error "Failed to build AttendanceTracker.exe"
            exit 1
        }
        
        # List contents of dist directory to verify
        Write-Host "Contents of PyInstaller dist directory:"
        Get-ChildItem "dist" | Format-Table Name, Length
        Set-Location ..\..

    - name: Create distribution package
      shell: pwsh  # Explicitly use PowerShell
      run: |
        Write-Host "Creating final package..."
        
        # Create a clean directory for the final package
        New-Item -ItemType Directory -Path "package_win" -Force
        
        Write-Host "Copying executables..."
        Copy-Item "Client\Windows\dist\power_monitor.exe" "package_win\" -Force
        Copy-Item "Client\Windows\dist\AttendanceTracker.exe" "package_win\" -Force
        
        Write-Host "Copying support files..."
        Copy-Item "Client\Windows\config.json" "package_win\" -Force
        Copy-Item "Client\Windows\test_install.bat" "package_win\" -Force
        Copy-Item "Client\Windows\uninstall.bat" "package_win\" -Force
        Copy-Item "Client\Windows\start.bat" "package_win\" -Force
        
        Write-Host "Package contents before zipping:"
        Get-ChildItem "package_win" | Format-Table Name, Length
        
        Write-Host "Creating ZIP archive..."
        Compress-Archive -Path "package_win\*" -DestinationPath "AttendanceTracker_Windows.zip" -Force
        
        Write-Host "Final ZIP file details:"
        Get-Item "AttendanceTracker_Windows.zip" | Format-Table Name, Length

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AttendanceTracker-Windows-x64
        path: AttendanceTracker_Windows.zip
name: Build Windows Executables
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        architecture: 'x64'
    - name: Install dependencies
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install -r Client/Windows/requirements.txt
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to install dependencies"
            exit 1
        }
        pip list | Out-File pip_list.txt
    - name: Build executables
      shell: pwsh
      working-directory: Client/Windows
      run: |
        Write-Host "Cleaning previous builds..."
        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue build, dist
        Write-Host "Building PowerMonitor.exe..."
        python -m PyInstaller --clean --log-level DEBUG power_monitor.spec 2>&1 | Tee-Object -FilePath "pyinstaller_log.txt"
        if (-not (Test-Path "dist/PowerMonitor.exe")) {
            Write-Error "Failed to build PowerMonitor.exe"
            Get-Content "pyinstaller_log.txt"
            exit 1
        }
        Write-Host "Building AttendanceTracker.exe..."
        python -m PyInstaller --clean AttendanceTracker.spec
        if (-not (Test-Path "dist/AttendanceTracker.exe")) {
            Write-Error "Failed to build AttendanceTracker.exe"
            exit 1
        }
        Write-Host "Contents of dist directory:"
        Get-ChildItem "dist" | Format-Table Name, Length
    - name: Create distribution package
      shell: pwsh
      run: |
        Write-Host "Copying files to root for flat zip..."
        Copy-Item "Client/Windows/dist/PowerMonitor.exe" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/dist/AttendanceTracker.exe" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/config.json" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/test_install.bat" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/uninstall.bat" "./" -Force -ErrorAction Stop
        Copy-Item "Client/Windows/start.bat" "./" -Force -ErrorAction Stop
        Write-Host "Package contents:"
        Get-ChildItem | Where-Object { $_.Name -in "PowerMonitor.exe", "AttendanceTracker.exe", "config.json", "test_install.bat", "uninstall.bat", "start.bat" } | Format-Table Name, Length
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AttendanceTracker-Windows-x64
        path: |
          PowerMonitor.exe
          AttendanceTracker.exe
          config.json
          test_install.bat
          uninstall.bat
          start.bat
    - name: Upload diagnostic logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Build-Diagnostics
        path: |
          pip_list.txt
          Client/Windows/pyinstaller_log.txt